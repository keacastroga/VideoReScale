cmake_minimum_required(VERSION 3.18)
#project( VideoReScale.out CUDA CXX)
project( VideoReScale.out )
find_package( OpenCV REQUIRED )
include_directories( ${OpenCV_INCLUDE_DIRS} )
#if(NOT DEFINED ${CMAKE_CUDA_ARCHITECTURES})
#    set(CMAKE_CUDA_ARCHITECTURES 50)
#endif()
message(STATUS "CUDA architectures set to ${CMAKE_CUDA_ARCHITECTURES}")
add_executable( VideoReScale.out VideoReScale.cpp )
add_executable( VideoReScaleOpenMP.out VideoReScaleOpenMP.cpp )
#add_executable( VideoReScaleCUDA.out VideoReScaleCUDA.cu )
target_link_libraries( VideoReScale.out ${OpenCV_LIBS} )
target_link_libraries( VideoReScaleOpenMP.out ${OpenCV_LIBS} )
#target_link_libraries( VideoReScaleCUDA.out ${OpenCV_LIBS} )
find_package(OpenMP)
if(OpenMP_CXX_FOUND)
    target_link_libraries(VideoReScaleOpenMP.out OpenMP::OpenMP_CXX)
#    target_link_libraries( VideoReScaleCUDA.out ${OpenCV_LIBS} )

endif()